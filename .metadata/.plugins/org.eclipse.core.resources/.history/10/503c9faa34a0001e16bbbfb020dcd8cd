package application.controller;

import java.io.IOException;

import org.json.JSONArray;
import org.json.JSONObject;

import application.model.database.OpenSeaDB;
import application.model.database.TwitterDB;
import application.service.AnalysisService;
import application.service.RecommendPostService;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;

public class Controller extends MyController {
	
	private static final String URL = "application/view.fxml" ;
	private JSONArray  data1 = new JSONArray();
	private JSONObject  data2 = new JSONObject();
	@FXML
	private VBox root;
    @FXML
    private CategoryAxis xAxis;
    @FXML
    private NumberAxis yAxis;
    @FXML
    private VBox showArea;
    @FXML
    private Text text1;
    
    @FXML
    private LineChart<String,Integer> chart ;
    
	public Controller() {
		loadView();
		
    }
	
	@Override
	public VBox getRoot() {
		return root;
	}

	@Override
	public void loadView() {
		FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(URL));
		fxmlLoader.setController(this);
	      try {
	          root = fxmlLoader.load();
	      } catch (IOException e) {
	    	  e.printStackTrace();
	      }
	}
	
	public void loadData(String market,String name) {	
		 if     (market.equals("OpenSea"))   { RecommendPostService option1 = new RecommendPostService(new TwitterDB(), new OpenSeaDB()) ;
		 									   AnalysisService      option2 = new AnalysisService(new TwitterDB(), new OpenSeaDB()) ;
		 										data1 =  option1.getReccomendPost(name)  ; 
		 										data2 =  option2.getCollectionWithNumberOfTagIn(name)  ;}
		 else if(market.equals("Binance"))   { RecommendPostService option1 = new RecommendPostService(new TwitterDB(), new OpenSeaDB()) ;
											   AnalysisService      option2 = new AnalysisService(new TwitterDB(), new OpenSeaDB()) ;
											   data1 =  option1.getReccomendPost(name)  ; 
											   data2 =  option2.getCollectionWithNumberOfTagIn(name)  ;} 
		 
		 	yAxis.setAutoRanging(false); // Tắt tự động điều chỉnh
	        yAxis.setLowerBound(0);       // Giá trị tối thiểu
	        yAxis.setUpperBound(600);     // Giá trị tối đa

	        // Thiết lập đơn vị chia trục tung
	        yAxis.setTickUnit(200);  // Đơn vị là 10
			XYChart.Series<String,Integer> series = new XYChart.Series<>();
			
			for(int i = 4; i > 0 ; i--) {
				 series.getData().add(new XYChart.Data<>(i + " day ago" , data2.getInt("Volume Day"+i)));
			}
			XYChart.Series<String,Integer> series2 = new XYChart.Series<>();
			for(int i = 4 ; i > 0  ; i--) {
				 series2.getData().add(new XYChart.Data<>(i + " day ago" , data2.getInt("Tag Day"+i) ));
			}
	        chart.getData().addAll(series,series2);
	        showArea.getChildren().add(text1) ;
	        StringBuilder urlBuilder = new StringBuilder();
			for(int j = 0 ; j < data1.length() ; j++) urlBuilder.append(data1.getJSONObject(j).get("url")).append("\n") ;
	        text1.setText(urlBuilder.toString());
	}
}