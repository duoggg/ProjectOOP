package application.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.json.JSONArray;
import org.json.JSONObject;

import application.model.APostModel;
import application.model.database.IPostDB;

public class HotHashTagService extends AAService  {
	
	private IPostDB<?> db ;
	
	public static final int DAY   = 1 ;
	public static final int WEEK  = 7 ;
	public static final int MONTH = 30 ;
	
	
	public HotHashTagService(IPostDB<?> db){
		this.db = db ;
		result = this.getAll();
	}
	
	@Override
	public JSONArray getResult(int option) {
		if	   (option == DAY ) 	result = this.getByDay() ;
		else if(option == WEEK ) 	result = this.getByMonth() ;
		else if(option == MONTH ) 	result = this.getByWeek() ;
		return result;
	}
	
	private JSONArray getAll() {
		JSONArray jsonArray = new JSONArray();
		String stringHashtag = new String();
		for(APostModel  pos : db.getAllPost()) stringHashtag += pos.getTags();
	    for (Map.Entry<String, Integer> entry : fromPostToHashtagOrder(stringHashtag)) {
	    	JSONObject jsonObject = new JSONObject();
	    	jsonObject.put("Hashtag", entry.getKey()) ;
	    	jsonObject.put("Number" , entry.getValue()) ;
	    	jsonArray.put(jsonObject);
	    }
		return jsonArray ;
	}
	
	private JSONArray getByDay(){
		JSONArray jsonArray = new JSONArray();
		String stringHashtag = new String();
		for(APostModel  pos : db.getPostIn24H()) stringHashtag += pos.getTags();
	    for (Map.Entry<String, Integer> entry : fromPostToHashtagOrder(stringHashtag)) {
	    	JSONObject jsonObject = new JSONObject();
	    	jsonObject.put("Hashtag", entry.getKey()) ;
	    	jsonObject.put("Number",entry.getValue()) ;
	    	jsonArray.put(jsonObject);
	    }
		return jsonArray ;
	}
		
	private JSONArray getByWeek(){
		JSONArray jsonArray = new JSONArray();
		String stringHashtag = new String();
		for(APostModel  pos : db.getPostIn1W()) stringHashtag += pos.getTags();
	    for (Map.Entry<String, Integer> entry : fromPostToHashtagOrder(stringHashtag)) {
	    	JSONObject jsonObject = new JSONObject();
	    	jsonObject.put("Hashtag", entry.getKey()) ;
	    	jsonObject.put("Number",entry.getValue()) ;
	    	jsonArray.put(jsonObject);
	    }
		return jsonArray ;
	}
		
	private JSONArray getByMonth(){
		JSONArray jsonArray = new JSONArray();
		String stringHashtag = new String();
		for(APostModel  pos : db.getPostIn1M()) stringHashtag += pos.getTags();
	    for (Map.Entry<String, Integer> entry : fromPostToHashtagOrder(stringHashtag)) {
	    	JSONObject jsonObject = new JSONObject();
	    	jsonObject.put("Hashtag", entry.getKey()) ;
	    	jsonObject.put("Number",entry.getValue()) ;
	    	jsonArray.put(jsonObject);
	    }
		return jsonArray ;
	}

//	private JSONArray getHashTagByRangeOfTime(int day){
//		JSONArray jsonArray = new JSONArray();
//		String stringHashtag = new String();
//		for(APostModel  pos : db.getPostByRangeOfTime(day)) stringHashtag += pos.getTag();
//	    for (Map.Entry<String, Integer> entry : fromPostToHashtagOrder(stringHashtag)) {
//	    	JSONObject jsonObject = new JSONObject();
//	    	jsonObject.put("Hashtag", entry.getKey()) ;
//	    	jsonObject.put("Number",entry.getValue()) ;
//	    	jsonArray.put(jsonObject);
//	    }
//		return jsonArray ;
//	}
	
private List<Map.Entry<String, Integer>> fromPostToHashtagOrder(String stringHashtag) {
		String[] hashtags = stringHashtag.split("#");
		Map<String, Integer> hashtagCountMap = new HashMap<>();
        for (String hashtag : hashtags) {
            if (!hashtag.isEmpty()) {
                hashtagCountMap.put(hashtag, hashtagCountMap.getOrDefault(hashtag, 0) + 1);
            }
        }
        List<Map.Entry<String, Integer>> entryList = new ArrayList<>(hashtagCountMap.entrySet());
        entryList.sort((entry1, entry2) -> entry2.getValue().compareTo(entry1.getValue()));
        
		return entryList;	
}


	
}
