package application.controller;


import java.io.IOException;

import org.json.JSONArray;
import org.json.JSONObject;
import application.model.database.OpenSeaDB;
import application.model.database.TwitterDB;
import application.service.AnalysisService;
import application.service.RecommendPostService;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.VBox;

public class AnalysisController extends MyController {
	
	private static final String URL = "application/Analysis.fxml" ;
	private static final String HEADER_STRING = "Phân tích tương quan" ;
	private JSONArray data = new JSONArray(); 
	private AnalysisService option1 ;
	private AnalysisService option2 =  new AnalysisService(new TwitterDB(), new OpenSeaDB()) ;
	private RecommendPostService option3 =  new RecommendPostService(new TwitterDB(), new OpenSeaDB()) ;
	@FXML
	private VBox root;
	@FXML
	private Label header;
	@FXML
	private VBox showArea;
	@FXML
	private ComboBox<String> marketplace;
	public VBox getRoot() {
		return root ;
	}
	public AnalysisController() {
		loadView();
		ObservableList<String> options = FXCollections.observableArrayList("OpenSea","Binance");
	    marketplace.setItems(options);
	   
	}
	
	@FXML
	void searchButtonPressed(ActionEvent event) {
		if(marketplace.getValue() == null) {
			ListController aController = new ListController() ;
			aController.add("Xin lỗi bạn đã chọn sai", null,null);
			showArea.getChildren().add(aController.getRoot());
		} else {
		
			loadData(marketplace.getValue()) ;
			showArea.getChildren().clear();	
			for(int i = 0; i < data.length() ;i++) {	
				ListController aController = new ListController() ;
				JSONObject jsonObject = data.getJSONObject(i);
				aController.add(jsonObject.getString("name"),null,null);
				JSONObject j1 = option1.getCollectionWithNumberOfTagIn(jsonObject.getString("name")) ;
				
				aController.getRoot().addEventFilter(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {
					private JSONArray  j2 = option3.getReccomendPost(jsonObject.getString("name"));
					@Override
					public void handle(MouseEvent arg0) {
						StringBuilder urlBuilder = new StringBuilder();
						for(int j = 0 ; j < j2.length() ; j++) urlBuilder.append(j2.getJSONObject(j).get("url")).append("\n") ;
						call("Phân tích", new Controller(j1.getString("name"),  urlBuilder.toString(),
														 j1.getInt("Volume Day1"),j1.getInt("Volume Day2"),j1.getInt("Volume Day3"),j1.getInt("Volume Day4"),
 						                                 j1.getInt("Tag Day1")   ,j1.getInt("Tag Day2")   ,j1.getInt("Tag Day3")   ,j1.getInt("Tag Day4")));
					}
				});
//				aController.addAnaLysisAction(j1.getString("name"), 
//											  j1.getInt("Volume Day1"),j1.getInt("Volume Day2"),j1.getInt("Volume Day3"),j1.getInt("Volume Day4"),
//     				  						  j1.getInt("Tag Day1")   ,j1.getInt("Tag Day2")   ,j1.getInt("Tag Day3")   ,j1.getInt("Tag Day4"));

				showArea.getChildren().add(aController.getRoot());
			}				
		}
	}
	
	private void call(String string , MyController controller) {
		root.getChildren().clear();
		root.getChildren().add(controller.getRoot()); 			
	}
	
	@Override
	public void loadView() {
		FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(URL));
		fxmlLoader.setController(this);
	      try {
	          root = fxmlLoader.load();
	      } catch (IOException e) {
	    	  e.printStackTrace();
	      }
	      header.setText(HEADER_STRING);
	}
	
	private void loadData(String market) {
		if     (market.equals("OpenSea"))   { option1 = new AnalysisService(new TwitterDB(), new OpenSeaDB()) ;
											  data =  option1.getCollectionName() ; }
		else if(market.equals("Binance"))   { option1 = new AnalysisService(new TwitterDB(), new OpenSeaDB()) ;
		  									  data =  option1.getCollectionName() ; }
		
	}
}
