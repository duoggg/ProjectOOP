package application.controller;

import java.io.IOException;
import org.json.JSONArray;
import org.json.JSONObject;

import application.model.database.BlogDB;
import application.model.database.OpenSeaDB;
import application.model.database.TwitterDB;
import application.service.SeeCollectionService;
import application.service.SeePostService;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;

public class SeePostController extends MyController {	
	
	private static final String URL = "application/PostList.fxml" ;
	private static final String HEADER_STRING = "Danh sách bài viết" ;
	private JSONArray data = new JSONArray(); 	
	@FXML
	private VBox root;
	@FXML
	private Label header;
	@FXML
	private VBox showArea;
	@FXML
	private ComboBox<String> socialOption;
	@FXML
	private TextField search ;
	
	public SeePostController() {
		loadView();
	}
	
	public VBox getRoot() {
		return root ;
	}
	
	@FXML
	void searchButtonPressed(ActionEvent event) throws IOException {
		showArea.getChildren().clear();
		loadData(search.getText(), socialOption.getValue());
	}
	
	@Override
	public void loadView() {
		FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(URL));
		fxmlLoader.setController(this);
	      try {
	          root = fxmlLoader.load();
	      } catch (IOException e) {
	    	  e.printStackTrace();
	      }
	      header.setText(HEADER_STRING);
	      ObservableList<String> options = FXCollections.observableArrayList("Twitter","Blog");
		  socialOption.setItems(options);
		  loadData();
	}
	
	private void loadData() {
		if     (search.getText().isEmpty() && (socialOption.getValue().equals("OpenSea")))  { 
			option = new SeeCollectionService(new OpenSeaDB()) ;
			data   = option.getAllCollectionInPreviousDay() ;
		}	
		else if (search.getText().isEmpty() && (socialOption.getValue().equals("Binance"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getAllCollectionInPreviousDay() ;	
		}
		else if(!search.getText().isEmpty() && (marketplace.getValue().equals("OpenSea"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getCollectionByNameInPreviousDay(search.getText()) ;
		}
		else if(!search.getText().isEmpty() && (marketplace.getValue().equals("Binance"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getCollectionByNameInPreviousDay(search.getText()) ;
		}
		
		data = 	(new SeePostService(new TwitterDB())).getResult() ;
		for(int i = 0;i < data.length() ;i++) {	
			JSONObject jsonObject = data.getJSONObject(i);
			ListController aController = new ListController() ;
			aController.add(jsonObject.getString("author"), jsonObject.getString("date"), null);
			aController.addAction(jsonObject.getString("tags"),jsonObject.getString("imageUrl"),jsonObject.getString("postUrl")
								  ,Integer.toString(jsonObject.getInt("views")) ,Integer.toString(jsonObject.getInt("likes")));
			showArea.getChildren().add(aController.getRoot());	
		}
	}
	
	private void loadData(String hashtag, String social) {
		if     (social.equals("Twitter"))	data =  (new SeePostService(new TwitterDB() ,hashtag)).getResult();	
		else if(social.equals("Blog"))      data =  (new SeePostService(new BlogDB()    ,hashtag)).getResult();
		
		for(int i = 0;i < data.length() ;i++) {	
			JSONObject jsonObject = data.getJSONObject(i);
			ListController aController = new ListController() ;
			aController.add(jsonObject.getString("author"), jsonObject.getString("date"), null);
			if (socialOption.getValue().equals("Twitter")) {
				aController.addAction(jsonObject.getString("tags"),jsonObject.getString("imageUrl"),jsonObject.getString("postUrl")
									  ,Integer.toString(jsonObject.getInt("views")) ,Integer.toString(jsonObject.getInt("likes")));
			} else if (socialOption.getValue().equals("Blog")) {
				aController.addAction(jsonObject.getString("tags"),jsonObject.getString("imageUrl"),jsonObject.getString("postUrl"),null, null);
			}
			
			showArea.getChildren().add(aController.getRoot());
		}
 	}

}


		
	

